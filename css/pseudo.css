/* Pseudo Classes */
.lnk{
    font-size: 25px;
    background-color: #fff;
}

.lnk:hover{
    background-color: black;
}

.lnk:active{
    background-color: crimson;
}

.lnk:visited{
    background-color: darkmagenta;
}

.chl p:first-child{
    color: blue;
}

.chl p:last-child{
    color: red;
}

.chl p:nth-child(5){
    color: chartreuse;
}

.chl p:nth-child(even){
    color: blueviolet;
}

input[type="text"]:focus{
    background-color: green;
}

input[type="email"]:disabled{
    background-color: black;
}

input[type="checkbox"]:checked + p{
    background-color: brown;
}

/* 

:active	a:active	Selects the active link

:checked	input:checked	Selects every checked <input> element

:disabled	input:disabled	Selects every disabled <input> element

:empty	p:empty	Selects every <p> element that has no children

:enabled	input:enabled	Selects every enabled <input> element

:first-child	p:first-child	Selects every <p> elements that is the first child of its parent

:first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent

:focus	input:focus	Selects the <input> element that has focus

:hover	a:hover	Selects links on mouse over

:in-range	input:in-range	Selects <input> elements with a value within a specified range

:invalid	input:invalid	Selects all <input> elements with an invalid value

:lang(language)	p:lang(it)	Selects every <p> element with a lang attribute value starting with "it"

:last-child	p:last-child	Selects every <p> elements that is the last child of its parent

:last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent

:link	a:link	Selects all unvisited links

:not(selector)	:not(p)	Selects every element that is not a <p> element

:nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent

:nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its 
parent, counting from the last child

:nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child

:nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent

:only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent

:only-child	p:only-child	Selects every <p> element that is the only child of its parent

:optional	input:optional	Selects <input> elements with no "required" attribute

:out-of-range	input:out-of-range	Selects <input> elements with a value outside a specified range

:read-only	input:read-only	Selects <input> elements with a "readonly" attribute specified

:read-write	input:read-write	Selects <input> elements with no "readonly" attribute

:required	input:required	Selects <input> elements with a "required" attribute specified

:root	root	Selects the document's root element

:target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)

:valid	input:valid	Selects all <input> elements with a valid value

:visited	a:visited	Selects all visited links
*/


/* Pseudo Eelements */

.req::before{
    content: '';
    height: 15px;
    width: 15px;
    display: block;
    background-color: red;
}

.req::after{
    content: '';
    height: 2px;
    width: 50px;
    display: block;
    background-color: blue;
}

.frm button{
    position: relative;
}

.frm button:hover::after{
    content: attr(data-tooltip);
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    margin-top: 5px;
    padding: 5px;
    background-color: lightgray;
}

.para::first-letter{
    color: red;
    font-size: xx-large;
}

.para::first-line{
    color: blue;
    font-variant: small-caps;
}


h1::selection{
    color: red;
    background-color: yellow;
}
